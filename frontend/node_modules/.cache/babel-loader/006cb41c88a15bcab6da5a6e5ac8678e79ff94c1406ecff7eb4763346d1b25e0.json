{"ast":null,"code":"var _jsxFileName = \"/Users/relationskatie/study_golang/Hackathon2GIS/frontend/src/components/Map2GIS.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './Map2GIS.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map2GIS = ({\n  selectedProperty,\n  onMapReady\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    // Проверяем, что 2ГИС API загружен\n    if (window.DG) {\n      initializeMap();\n    } else {\n      // Ждем загрузки API\n      const checkAPI = setInterval(() => {\n        if (window.DG) {\n          clearInterval(checkAPI);\n          initializeMap();\n        }\n      }, 100);\n      return () => clearInterval(checkAPI);\n    }\n  }, []);\n  const initializeMap = () => {\n    if (mapRef.current && !mapInstance.current) {\n      // Инициализируем карту с центром в Москве\n      mapInstance.current = DG.map(mapRef.current, {\n        center: [55.7558, 37.6176],\n        // Москва\n        zoom: 10\n      });\n      setIsLoaded(true);\n      if (onMapReady) {\n        onMapReady(mapInstance.current);\n      }\n    }\n  };\n  useEffect(() => {\n    if (selectedProperty && mapInstance.current && isLoaded) {\n      // Очищаем предыдущие маркеры\n      mapInstance.current.eachLayer(layer => {\n        if (layer instanceof DG.Marker) {\n          mapInstance.current.removeLayer(layer);\n        }\n      });\n\n      // Добавляем маркер для выбранного объекта\n      const marker = DG.marker([selectedProperty.lat, selectedProperty.lng]).addTo(mapInstance.current);\n\n      // Создаем всплывающее окно с информацией об объекте\n      const popup = DG.popup().setContent(`\n          <div style=\"padding: 8px;\">\n            <h4 style=\"margin: 0 0 8px 0; font-size: 14px;\">${selectedProperty.type}, ${selectedProperty.area}</h4>\n            <p style=\"margin: 0 0 4px 0; font-weight: bold; color: #333;\">${selectedProperty.price}</p>\n            <p style=\"margin: 0; font-size: 12px; color: #666;\">${selectedProperty.address}</p>\n          </div>\n        `);\n      marker.bindPopup(popup);\n\n      // Центрируем карту на выбранном объекте\n      mapInstance.current.setView([selectedProperty.lat, selectedProperty.lng], 15);\n    }\n  }, [selectedProperty, isLoaded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u041A\\u0430\\u0440\\u0442\\u0430 2\\u0413\\u0418\\u0421\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      className: \"map-2gis\",\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Map2GIS, \"52sR2gZbHss0lgClPmdc9K/s1gk=\");\n_c = Map2GIS;\nexport default Map2GIS;\nvar _c;\n$RefreshReg$(_c, \"Map2GIS\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Map2GIS","selectedProperty","onMapReady","_s","mapRef","mapInstance","isLoaded","setIsLoaded","window","DG","initializeMap","checkAPI","setInterval","clearInterval","current","map","center","zoom","eachLayer","layer","Marker","removeLayer","marker","lat","lng","addTo","popup","setContent","type","area","price","address","bindPopup","setView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","height","_c","$RefreshReg$"],"sources":["/Users/relationskatie/study_golang/Hackathon2GIS/frontend/src/components/Map2GIS.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './Map2GIS.css';\n\nconst Map2GIS = ({ selectedProperty, onMapReady }) => {\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    // Проверяем, что 2ГИС API загружен\n    if (window.DG) {\n      initializeMap();\n    } else {\n      // Ждем загрузки API\n      const checkAPI = setInterval(() => {\n        if (window.DG) {\n          clearInterval(checkAPI);\n          initializeMap();\n        }\n      }, 100);\n\n      return () => clearInterval(checkAPI);\n    }\n  }, []);\n\n  const initializeMap = () => {\n    if (mapRef.current && !mapInstance.current) {\n      // Инициализируем карту с центром в Москве\n      mapInstance.current = DG.map(mapRef.current, {\n        center: [55.7558, 37.6176], // Москва\n        zoom: 10\n      });\n\n      setIsLoaded(true);\n      if (onMapReady) {\n        onMapReady(mapInstance.current);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (selectedProperty && mapInstance.current && isLoaded) {\n      // Очищаем предыдущие маркеры\n      mapInstance.current.eachLayer((layer) => {\n        if (layer instanceof DG.Marker) {\n          mapInstance.current.removeLayer(layer);\n        }\n      });\n\n      // Добавляем маркер для выбранного объекта\n      const marker = DG.marker([selectedProperty.lat, selectedProperty.lng])\n        .addTo(mapInstance.current);\n\n      // Создаем всплывающее окно с информацией об объекте\n      const popup = DG.popup()\n        .setContent(`\n          <div style=\"padding: 8px;\">\n            <h4 style=\"margin: 0 0 8px 0; font-size: 14px;\">${selectedProperty.type}, ${selectedProperty.area}</h4>\n            <p style=\"margin: 0 0 4px 0; font-weight: bold; color: #333;\">${selectedProperty.price}</p>\n            <p style=\"margin: 0; font-size: 12px; color: #666;\">${selectedProperty.address}</p>\n          </div>\n        `);\n\n      marker.bindPopup(popup);\n      \n      // Центрируем карту на выбранном объекте\n      mapInstance.current.setView([selectedProperty.lat, selectedProperty.lng], 15);\n    }\n  }, [selectedProperty, isLoaded]);\n\n  return (\n    <div className=\"map-container\">\n      <div className=\"map-header\">\n        <h3>Карта 2ГИС</h3>\n      </div>\n      <div \n        ref={mapRef} \n        className=\"map-2gis\"\n        style={{ width: '100%', height: '100%' }}\n      />\n    </div>\n  );\n};\n\nexport default Map2GIS;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}