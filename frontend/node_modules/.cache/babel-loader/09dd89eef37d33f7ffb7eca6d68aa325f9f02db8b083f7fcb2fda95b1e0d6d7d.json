{"ast":null,"code":"var _jsxFileName = \"/Users/relationskatie/study_golang/Hackathon2GIS/frontend/src/components/Map2GIS.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './Map2GIS.css';\nimport { API_CONFIG } from '../config/api';\n\n/* global DG */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map2GIS = ({\n  selectedProperty,\n  onMapReady\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const initializeMap = React.useCallback(() => {\n    if (mapRef.current && !mapInstance.current && window.DG) {\n      try {\n        console.log('Инициализация карты 2ГИС с ключом API...');\n        // Инициализируем карту с центром в Москве\n        mapInstance.current = DG.map(mapRef.current, {\n          center: [55.7558, 37.6176],\n          // Москва\n          zoom: 10,\n          key: API_CONFIG.KEY // Ключ API 2ГИС\n        });\n        console.log('Карта 2ГИС успешно инициализирована с ключом API');\n        setIsLoaded(true);\n        if (onMapReady) {\n          onMapReady(mapInstance.current);\n        }\n      } catch (error) {\n        console.error('Ошибка инициализации карты 2ГИС:', error);\n      }\n    }\n  }, [onMapReady]);\n  useEffect(() => {\n    console.log('=== ОТЛАДКА 2ГИС API ===');\n    console.log('window.DG доступен:', !!window.DG);\n    console.log('window.DG_READY:', !!window.DG_READY);\n    console.log('mapRef.current:', !!mapRef.current);\n    console.log('mapInstance.current:', !!mapInstance.current);\n    const handleScriptLoad = () => {\n      console.log('Событие загрузки скрипта сработало');\n      console.log('window.DG после события load:', !!window.DG);\n      console.log('window.DG_READY после события load:', !!window.DG_READY);\n      if (window.DG && window.DG_READY) {\n        initializeMap();\n      }\n    };\n\n    // Проверяем, что 2ГИС API загружен\n    if (window.DG && window.DG_READY) {\n      console.log('API уже загружен и готов, инициализируем карту');\n      initializeMap();\n    } else {\n      console.log('API не загружен, начинаем ожидание...');\n      // Ждем загрузки API\n      let attempts = 0;\n      const maxAttempts = 50; // 5 секунд максимум\n\n      const checkAPI = setInterval(() => {\n        attempts++;\n        console.log(`Попытка ${attempts}/${maxAttempts}: window.DG =`, !!window.DG, 'DG_READY =', !!window.DG_READY);\n        if (window.DG && window.DG_READY) {\n          console.log('API загружен и готов! Инициализируем карту');\n          clearInterval(checkAPI);\n          initializeMap();\n        } else if (attempts >= maxAttempts) {\n          console.error('Превышено максимальное количество попыток загрузки API');\n          clearInterval(checkAPI);\n        }\n      }, 100);\n\n      // Также слушаем событие загрузки скрипта\n      window.addEventListener('load', handleScriptLoad);\n      document.addEventListener('DOMContentLoaded', handleScriptLoad);\n      return () => {\n        clearInterval(checkAPI);\n        window.removeEventListener('load', handleScriptLoad);\n        document.removeEventListener('DOMContentLoaded', handleScriptLoad);\n      };\n    }\n  }, [initializeMap]);\n  useEffect(() => {\n    if (selectedProperty && mapInstance.current && isLoaded) {\n      // Очищаем предыдущие маркеры\n      mapInstance.current.eachLayer(layer => {\n        if (layer instanceof DG.Marker) {\n          mapInstance.current.removeLayer(layer);\n        }\n      });\n\n      // Добавляем маркер для выбранного объекта\n      const marker = DG.marker([selectedProperty.lat, selectedProperty.lng]).addTo(mapInstance.current);\n\n      // Создаем всплывающее окно с информацией об объекте\n      const popup = DG.popup().setContent(`\n          <div style=\"padding: 8px;\">\n            <h4 style=\"margin: 0 0 8px 0; font-size: 14px;\">${selectedProperty.type}, ${selectedProperty.area}</h4>\n            <p style=\"margin: 0 0 4px 0; font-weight: bold; color: #333;\">${selectedProperty.price}</p>\n            <p style=\"margin: 0; font-size: 12px; color: #666;\">${selectedProperty.address}</p>\n          </div>\n        `);\n      marker.bindPopup(popup);\n\n      // Центрируем карту на выбранном объекте\n      mapInstance.current.setView([selectedProperty.lat, selectedProperty.lng], 15);\n    }\n  }, [selectedProperty, isLoaded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u041A\\u0430\\u0440\\u0442\\u0430 2\\u0413\\u0418\\u0421\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '12px',\n          color: '#666'\n        },\n        children: isLoaded ? 'Карта загружена' : 'Загрузка карты...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '10px',\n          color: '#999'\n        },\n        children: [\"DG API: \", window.DG ? '✓' : '✗', \" | DG_READY: \", window.DG_READY ? '✓' : '✗']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      className: \"map-2gis\",\n      style: {\n        width: '100%',\n        height: '100%',\n        minHeight: '400px',\n        backgroundColor: '#f0f0f0',\n        position: 'relative'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), !isLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        color: '#666',\n        fontSize: '14px',\n        textAlign: 'center',\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043A\\u0430\\u0440\\u0442\\u044B 2\\u0413\\u0418\\u0421...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '12px',\n          marginTop: '8px'\n        },\n        children: \"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u044C\\u0442\\u0435 \\u043A\\u043E\\u043D\\u0441\\u043E\\u043B\\u044C \\u0434\\u043B\\u044F \\u043E\\u0442\\u043B\\u0430\\u0434\\u043E\\u0447\\u043D\\u043E\\u0439 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '10px',\n          marginTop: '4px',\n          color: '#999'\n        },\n        children: \"\\u0415\\u0441\\u043B\\u0438 \\u043A\\u0430\\u0440\\u0442\\u0430 \\u043D\\u0435 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u0435\\u0442\\u0441\\u044F, \\u043F\\u0440\\u043E\\u0432\\u0435\\u0440\\u044C\\u0442\\u0435 \\u043A\\u043B\\u044E\\u0447 API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(Map2GIS, \"xrNstMtzVE+3U3VtmX8EHFN9jxw=\");\n_c = Map2GIS;\nexport default Map2GIS;\nvar _c;\n$RefreshReg$(_c, \"Map2GIS\");","map":{"version":3,"names":["React","useEffect","useRef","useState","API_CONFIG","jsxDEV","_jsxDEV","Map2GIS","selectedProperty","onMapReady","_s","mapRef","mapInstance","isLoaded","setIsLoaded","initializeMap","useCallback","current","window","DG","console","log","map","center","zoom","key","KEY","error","DG_READY","handleScriptLoad","attempts","maxAttempts","checkAPI","setInterval","clearInterval","addEventListener","document","removeEventListener","eachLayer","layer","Marker","removeLayer","marker","lat","lng","addTo","popup","setContent","type","area","price","address","bindPopup","setView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","color","ref","width","height","minHeight","backgroundColor","position","top","left","transform","textAlign","zIndex","marginTop","_c","$RefreshReg$"],"sources":["/Users/relationskatie/study_golang/Hackathon2GIS/frontend/src/components/Map2GIS.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './Map2GIS.css';\nimport { API_CONFIG } from '../config/api';\n\n/* global DG */\n\nconst Map2GIS = ({ selectedProperty, onMapReady }) => {\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const initializeMap = React.useCallback(() => {\n    if (mapRef.current && !mapInstance.current && window.DG) {\n      try {\n        console.log('Инициализация карты 2ГИС с ключом API...');\n        // Инициализируем карту с центром в Москве\n        mapInstance.current = DG.map(mapRef.current, {\n          center: [55.7558, 37.6176], // Москва\n          zoom: 10,\n          key: API_CONFIG.KEY // Ключ API 2ГИС\n        });\n\n        console.log('Карта 2ГИС успешно инициализирована с ключом API');\n        setIsLoaded(true);\n        if (onMapReady) {\n          onMapReady(mapInstance.current);\n        }\n      } catch (error) {\n        console.error('Ошибка инициализации карты 2ГИС:', error);\n      }\n    }\n  }, [onMapReady]);\n\n  useEffect(() => {\n    console.log('=== ОТЛАДКА 2ГИС API ===');\n    console.log('window.DG доступен:', !!window.DG);\n    console.log('window.DG_READY:', !!window.DG_READY);\n    console.log('mapRef.current:', !!mapRef.current);\n    console.log('mapInstance.current:', !!mapInstance.current);\n    \n    const handleScriptLoad = () => {\n      console.log('Событие загрузки скрипта сработало');\n      console.log('window.DG после события load:', !!window.DG);\n      console.log('window.DG_READY после события load:', !!window.DG_READY);\n      if (window.DG && window.DG_READY) {\n        initializeMap();\n      }\n    };\n\n    // Проверяем, что 2ГИС API загружен\n    if (window.DG && window.DG_READY) {\n      console.log('API уже загружен и готов, инициализируем карту');\n      initializeMap();\n    } else {\n      console.log('API не загружен, начинаем ожидание...');\n      // Ждем загрузки API\n      let attempts = 0;\n      const maxAttempts = 50; // 5 секунд максимум\n      \n      const checkAPI = setInterval(() => {\n        attempts++;\n        console.log(`Попытка ${attempts}/${maxAttempts}: window.DG =`, !!window.DG, 'DG_READY =', !!window.DG_READY);\n        \n        if (window.DG && window.DG_READY) {\n          console.log('API загружен и готов! Инициализируем карту');\n          clearInterval(checkAPI);\n          initializeMap();\n        } else if (attempts >= maxAttempts) {\n          console.error('Превышено максимальное количество попыток загрузки API');\n          clearInterval(checkAPI);\n        }\n      }, 100);\n\n      // Также слушаем событие загрузки скрипта\n      window.addEventListener('load', handleScriptLoad);\n      document.addEventListener('DOMContentLoaded', handleScriptLoad);\n\n      return () => {\n        clearInterval(checkAPI);\n        window.removeEventListener('load', handleScriptLoad);\n        document.removeEventListener('DOMContentLoaded', handleScriptLoad);\n      };\n    }\n  }, [initializeMap]);\n\n  useEffect(() => {\n    if (selectedProperty && mapInstance.current && isLoaded) {\n      // Очищаем предыдущие маркеры\n      mapInstance.current.eachLayer((layer) => {\n        if (layer instanceof DG.Marker) {\n          mapInstance.current.removeLayer(layer);\n        }\n      });\n\n      // Добавляем маркер для выбранного объекта\n      const marker = DG.marker([selectedProperty.lat, selectedProperty.lng])\n        .addTo(mapInstance.current);\n\n      // Создаем всплывающее окно с информацией об объекте\n      const popup = DG.popup()\n        .setContent(`\n          <div style=\"padding: 8px;\">\n            <h4 style=\"margin: 0 0 8px 0; font-size: 14px;\">${selectedProperty.type}, ${selectedProperty.area}</h4>\n            <p style=\"margin: 0 0 4px 0; font-weight: bold; color: #333;\">${selectedProperty.price}</p>\n            <p style=\"margin: 0; font-size: 12px; color: #666;\">${selectedProperty.address}</p>\n          </div>\n        `);\n\n      marker.bindPopup(popup);\n      \n      // Центрируем карту на выбранном объекте\n      mapInstance.current.setView([selectedProperty.lat, selectedProperty.lng], 15);\n    }\n  }, [selectedProperty, isLoaded]);\n\n  return (\n    <div className=\"map-container\">\n      <div className=\"map-header\">\n        <h3>Карта 2ГИС</h3>\n        <div style={{ fontSize: '12px', color: '#666' }}>\n          {isLoaded ? 'Карта загружена' : 'Загрузка карты...'}\n        </div>\n        <div style={{ fontSize: '10px', color: '#999' }}>\n          DG API: {window.DG ? '✓' : '✗'} | DG_READY: {window.DG_READY ? '✓' : '✗'}\n        </div>\n      </div>\n      <div \n        ref={mapRef} \n        className=\"map-2gis\"\n        style={{ \n          width: '100%', \n          height: '100%',\n          minHeight: '400px',\n          backgroundColor: '#f0f0f0',\n          position: 'relative'\n        }}\n      />\n      {!isLoaded && (\n        <div style={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          color: '#666',\n          fontSize: '14px',\n          textAlign: 'center',\n          zIndex: 1000\n        }}>\n          <div>Загрузка карты 2ГИС...</div>\n          <div style={{ fontSize: '12px', marginTop: '8px' }}>\n            Проверьте консоль для отладочной информации\n          </div>\n          <div style={{ fontSize: '10px', marginTop: '4px', color: '#999' }}>\n            Если карта не загружается, проверьте ключ API\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Map2GIS;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,eAAe;AACtB,SAASC,UAAU,QAAQ,eAAe;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAMC,MAAM,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMU,WAAW,GAAGV,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMY,aAAa,GAAGf,KAAK,CAACgB,WAAW,CAAC,MAAM;IAC5C,IAAIL,MAAM,CAACM,OAAO,IAAI,CAACL,WAAW,CAACK,OAAO,IAAIC,MAAM,CAACC,EAAE,EAAE;MACvD,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;QACvD;QACAT,WAAW,CAACK,OAAO,GAAGE,EAAE,CAACG,GAAG,CAACX,MAAM,CAACM,OAAO,EAAE;UAC3CM,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;UAAE;UAC5BC,IAAI,EAAE,EAAE;UACRC,GAAG,EAAErB,UAAU,CAACsB,GAAG,CAAC;QACtB,CAAC,CAAC;QAEFN,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;QAC/DP,WAAW,CAAC,IAAI,CAAC;QACjB,IAAIL,UAAU,EAAE;UACdA,UAAU,CAACG,WAAW,CAACK,OAAO,CAAC;QACjC;MACF,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF;EACF,CAAC,EAAE,CAAClB,UAAU,CAAC,CAAC;EAEhBR,SAAS,CAAC,MAAM;IACdmB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvCD,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,CAAC,CAACH,MAAM,CAACC,EAAE,CAAC;IAC/CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,CAAC,CAACH,MAAM,CAACU,QAAQ,CAAC;IAClDR,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,CAAC,CAACV,MAAM,CAACM,OAAO,CAAC;IAChDG,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE,CAAC,CAACT,WAAW,CAACK,OAAO,CAAC;IAE1D,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;MAC7BT,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACjDD,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE,CAAC,CAACH,MAAM,CAACC,EAAE,CAAC;MACzDC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAE,CAAC,CAACH,MAAM,CAACU,QAAQ,CAAC;MACrE,IAAIV,MAAM,CAACC,EAAE,IAAID,MAAM,CAACU,QAAQ,EAAE;QAChCb,aAAa,CAAC,CAAC;MACjB;IACF,CAAC;;IAED;IACA,IAAIG,MAAM,CAACC,EAAE,IAAID,MAAM,CAACU,QAAQ,EAAE;MAChCR,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;MAC7DN,aAAa,CAAC,CAAC;IACjB,CAAC,MAAM;MACLK,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACpD;MACA,IAAIS,QAAQ,GAAG,CAAC;MAChB,MAAMC,WAAW,GAAG,EAAE,CAAC,CAAC;;MAExB,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCH,QAAQ,EAAE;QACVV,OAAO,CAACC,GAAG,CAAC,WAAWS,QAAQ,IAAIC,WAAW,eAAe,EAAE,CAAC,CAACb,MAAM,CAACC,EAAE,EAAE,YAAY,EAAE,CAAC,CAACD,MAAM,CAACU,QAAQ,CAAC;QAE5G,IAAIV,MAAM,CAACC,EAAE,IAAID,MAAM,CAACU,QAAQ,EAAE;UAChCR,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;UACzDa,aAAa,CAACF,QAAQ,CAAC;UACvBjB,aAAa,CAAC,CAAC;QACjB,CAAC,MAAM,IAAIe,QAAQ,IAAIC,WAAW,EAAE;UAClCX,OAAO,CAACO,KAAK,CAAC,wDAAwD,CAAC;UACvEO,aAAa,CAACF,QAAQ,CAAC;QACzB;MACF,CAAC,EAAE,GAAG,CAAC;;MAEP;MACAd,MAAM,CAACiB,gBAAgB,CAAC,MAAM,EAAEN,gBAAgB,CAAC;MACjDO,QAAQ,CAACD,gBAAgB,CAAC,kBAAkB,EAAEN,gBAAgB,CAAC;MAE/D,OAAO,MAAM;QACXK,aAAa,CAACF,QAAQ,CAAC;QACvBd,MAAM,CAACmB,mBAAmB,CAAC,MAAM,EAAER,gBAAgB,CAAC;QACpDO,QAAQ,CAACC,mBAAmB,CAAC,kBAAkB,EAAER,gBAAgB,CAAC;MACpE,CAAC;IACH;EACF,CAAC,EAAE,CAACd,aAAa,CAAC,CAAC;EAEnBd,SAAS,CAAC,MAAM;IACd,IAAIO,gBAAgB,IAAII,WAAW,CAACK,OAAO,IAAIJ,QAAQ,EAAE;MACvD;MACAD,WAAW,CAACK,OAAO,CAACqB,SAAS,CAAEC,KAAK,IAAK;QACvC,IAAIA,KAAK,YAAYpB,EAAE,CAACqB,MAAM,EAAE;UAC9B5B,WAAW,CAACK,OAAO,CAACwB,WAAW,CAACF,KAAK,CAAC;QACxC;MACF,CAAC,CAAC;;MAEF;MACA,MAAMG,MAAM,GAAGvB,EAAE,CAACuB,MAAM,CAAC,CAAClC,gBAAgB,CAACmC,GAAG,EAAEnC,gBAAgB,CAACoC,GAAG,CAAC,CAAC,CACnEC,KAAK,CAACjC,WAAW,CAACK,OAAO,CAAC;;MAE7B;MACA,MAAM6B,KAAK,GAAG3B,EAAE,CAAC2B,KAAK,CAAC,CAAC,CACrBC,UAAU,CAAC;AACpB;AACA,8DAA8DvC,gBAAgB,CAACwC,IAAI,KAAKxC,gBAAgB,CAACyC,IAAI;AAC7G,4EAA4EzC,gBAAgB,CAAC0C,KAAK;AAClG,kEAAkE1C,gBAAgB,CAAC2C,OAAO;AAC1F;AACA,SAAS,CAAC;MAEJT,MAAM,CAACU,SAAS,CAACN,KAAK,CAAC;;MAEvB;MACAlC,WAAW,CAACK,OAAO,CAACoC,OAAO,CAAC,CAAC7C,gBAAgB,CAACmC,GAAG,EAAEnC,gBAAgB,CAACoC,GAAG,CAAC,EAAE,EAAE,CAAC;IAC/E;EACF,CAAC,EAAE,CAACpC,gBAAgB,EAAEK,QAAQ,CAAC,CAAC;EAEhC,oBACEP,OAAA;IAAKgD,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BjD,OAAA;MAAKgD,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBjD,OAAA;QAAAiD,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBrD,OAAA;QAAKsD,KAAK,EAAE;UAAEC,QAAQ,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAP,QAAA,EAC7C1C,QAAQ,GAAG,iBAAiB,GAAG;MAAmB;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACNrD,OAAA;QAAKsD,KAAK,EAAE;UAAEC,QAAQ,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAP,QAAA,GAAC,UACvC,EAACrC,MAAM,CAACC,EAAE,GAAG,GAAG,GAAG,GAAG,EAAC,eAAa,EAACD,MAAM,CAACU,QAAQ,GAAG,GAAG,GAAG,GAAG;MAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNrD,OAAA;MACEyD,GAAG,EAAEpD,MAAO;MACZ2C,SAAS,EAAC,UAAU;MACpBM,KAAK,EAAE;QACLI,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,SAAS,EAAE,OAAO;QAClBC,eAAe,EAAE,SAAS;QAC1BC,QAAQ,EAAE;MACZ;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACD,CAAC9C,QAAQ,iBACRP,OAAA;MAAKsD,KAAK,EAAE;QACVQ,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,KAAK;QACVC,IAAI,EAAE,KAAK;QACXC,SAAS,EAAE,uBAAuB;QAClCT,KAAK,EAAE,MAAM;QACbD,QAAQ,EAAE,MAAM;QAChBW,SAAS,EAAE,QAAQ;QACnBC,MAAM,EAAE;MACV,CAAE;MAAAlB,QAAA,gBACAjD,OAAA;QAAAiD,QAAA,EAAK;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjCrD,OAAA;QAAKsD,KAAK,EAAE;UAAEC,QAAQ,EAAE,MAAM;UAAEa,SAAS,EAAE;QAAM,CAAE;QAAAnB,QAAA,EAAC;MAEpD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNrD,OAAA;QAAKsD,KAAK,EAAE;UAAEC,QAAQ,EAAE,MAAM;UAAEa,SAAS,EAAE,KAAK;UAAEZ,KAAK,EAAE;QAAO,CAAE;QAAAP,QAAA,EAAC;MAEnE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjD,EAAA,CAzJIH,OAAO;AAAAoE,EAAA,GAAPpE,OAAO;AA2Jb,eAAeA,OAAO;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}