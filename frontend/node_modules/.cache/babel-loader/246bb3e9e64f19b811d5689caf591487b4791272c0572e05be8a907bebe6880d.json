{"ast":null,"code":"var _jsxFileName = \"/Users/relationskatie/study_golang/Hackathon2GIS/frontend/src/Map2GIS.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { load } from '@2gis/mapgl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Map2GIS = ({\n  value\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapglAPIRef = useRef(null);\n  const mainMarkerRef = useRef(null);\n  const infraMarkersRef = useRef([]);\n  useEffect(() => {\n    load().then(mapglAPI => {\n      mapglAPIRef.current = mapglAPI;\n      const mapInstance = new mapglAPI.Map('map-container', {\n        center: [37.618423, 55.751244],\n        // Москва\n        zoom: 13,\n        key: '8f104049-075f-4c47-817b-b8b450854d86'\n      });\n      mapRef.current = mapInstance;\n    });\n    return () => mapRef.current && mapRef.current.destroy();\n  }, []);\n  useEffect(() => {\n    if (!mapRef.current || !mapglAPIRef.current || !value) return;\n    const mapInstance = mapRef.current;\n    const mapglAPI = mapglAPIRef.current;\n\n    // Удаляем старый главный маркер\n    if (mainMarkerRef.current) {\n      mainMarkerRef.current.destroy();\n    }\n\n    // Удаляем маркеры инфраструктуры\n    infraMarkersRef.current.forEach(marker => marker.destroy());\n    infraMarkersRef.current = [];\n\n    // Создаём главный маркер квартиры\n    mainMarkerRef.current = new mapglAPI.Marker(mapInstance, {\n      coordinates: [value.lon, value.lat],\n      color: '#ff0000' // красный для квартиры\n    });\n\n    // Центрируем карту на квартире\n    mapInstance.setCenter([value.lon, value.lat]);\n\n    // Добавляем маркеры инфраструктуры, если есть\n    if (value.map) {\n      Object.values(value.map).forEach(places => {\n        places.forEach(place => {\n          const marker = new mapglAPI.Marker(mapInstance, {\n            coordinates: place.coords,\n            color: '#0000ff' // синие маркеры для инфраструктуры\n          });\n          infraMarkersRef.current.push(marker);\n        });\n      });\n    }\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map-container\",\n    style: {\n      width: '100%',\n      height: '500px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n};\n_s(Map2GIS, \"9lfRi+4BGNEY2QPnpsfZMhDCxC0=\");\n_c = Map2GIS;\nvar _c;\n$RefreshReg$(_c, \"Map2GIS\");","map":{"version":3,"names":["React","useEffect","useRef","load","jsxDEV","_jsxDEV","Map2GIS","value","_s","mapRef","mapglAPIRef","mainMarkerRef","infraMarkersRef","then","mapglAPI","current","mapInstance","Map","center","zoom","key","destroy","forEach","marker","Marker","coordinates","lon","lat","color","setCenter","map","Object","values","places","place","coords","push","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/relationskatie/study_golang/Hackathon2GIS/frontend/src/Map2GIS.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { load } from '@2gis/mapgl';\n\nexport const Map2GIS = ({ value }) => {\n  const mapRef = useRef(null);\n  const mapglAPIRef = useRef(null);\n  const mainMarkerRef = useRef(null);\n  const infraMarkersRef = useRef([]);\n\n  useEffect(() => {\n    load().then((mapglAPI) => {\n      mapglAPIRef.current = mapglAPI;\n\n      const mapInstance = new mapglAPI.Map('map-container', {\n        center: [37.618423, 55.751244], // Москва\n        zoom: 13,\n        key: '8f104049-075f-4c47-817b-b8b450854d86',\n      });\n\n      mapRef.current = mapInstance;\n    });\n\n    return () => mapRef.current && mapRef.current.destroy();\n  }, []);\n\n  useEffect(() => {\n    if (!mapRef.current || !mapglAPIRef.current || !value) return;\n\n    const mapInstance = mapRef.current;\n    const mapglAPI = mapglAPIRef.current;\n\n    // Удаляем старый главный маркер\n    if (mainMarkerRef.current) {\n      mainMarkerRef.current.destroy();\n    }\n\n    // Удаляем маркеры инфраструктуры\n    infraMarkersRef.current.forEach(marker => marker.destroy());\n    infraMarkersRef.current = [];\n\n    // Создаём главный маркер квартиры\n    mainMarkerRef.current = new mapglAPI.Marker(mapInstance, {\n      coordinates: [value.lon, value.lat],\n      color: '#ff0000', // красный для квартиры\n    });\n\n    // Центрируем карту на квартире\n    mapInstance.setCenter([value.lon, value.lat]);\n\n    // Добавляем маркеры инфраструктуры, если есть\n    if (value.map) {\n      Object.values(value.map).forEach((places) => {\n        places.forEach((place) => {\n          const marker = new mapglAPI.Marker(mapInstance, {\n            coordinates: place.coords,\n            color: '#0000ff', // синие маркеры для инфраструктуры\n          });\n          infraMarkersRef.current.push(marker);\n        });\n      });\n    }\n  }, [value]);\n\n  return <div id=\"map-container\" style={{ width: '100%', height: '500px' }}></div>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}