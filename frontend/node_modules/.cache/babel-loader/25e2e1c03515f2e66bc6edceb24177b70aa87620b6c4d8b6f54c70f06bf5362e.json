{"ast":null,"code":"var _jsxFileName = \"/Users/relationskatie/study_golang/Hackathon2GIS/frontend/src/Map2GIS.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { load } from '@2gis/mapgl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = '2d952543-cd26-4a9b-9aa9-ffa59a0000a3';\nconst GEOCODE_URL = 'https://catalog.api.2gis.com/3.0/items/geocode';\nexport const Map2GIS = ({\n  value\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapglAPIRef = useRef(null);\n  const mainMarkerRef = useRef(null);\n  const infraMarkersRef = useRef([]);\n\n  // Инициализация карты\n  useEffect(() => {\n    let isMounted = true;\n    load().then(mapglAPI => {\n      if (!isMounted) return;\n      mapglAPIRef.current = mapglAPI;\n      mapRef.current = new mapglAPI.Map('map-container', {\n        center: [37.618423, 55.751244],\n        zoom: 13,\n        key: API_KEY\n      });\n    });\n    return () => {\n      isMounted = false;\n      mapRef.current && mapRef.current.destroy();\n    };\n  }, []);\n\n  // Получение координат по адресу\n  const fetchCoords = async address => {\n    try {\n      var _data$result, _data$result$items, _data$result$items$;\n      const query = `Москва, ${address}`;\n      const url = `${GEOCODE_URL}?q=${encodeURIComponent(query)}&fields=items.point&key=${API_KEY}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      const point = data === null || data === void 0 ? void 0 : (_data$result = data.result) === null || _data$result === void 0 ? void 0 : (_data$result$items = _data$result.items) === null || _data$result$items === void 0 ? void 0 : (_data$result$items$ = _data$result$items[0]) === null || _data$result$items$ === void 0 ? void 0 : _data$result$items$.point;\n      if (point !== null && point !== void 0 && point.lat && point !== null && point !== void 0 && point.lon) {\n        return [point.lon, point.lat];\n      }\n    } catch (err) {\n      console.error('Ошибка геокодинга:', err);\n    }\n    return null;\n  };\n  useEffect(() => {\n    if (!mapRef.current || !mapglAPIRef.current || !value) return;\n    const mapInstance = mapRef.current;\n    const mapglAPI = mapglAPIRef.current;\n\n    // Удаляем предыдущие маркеры\n    if (mainMarkerRef.current) mainMarkerRef.current.destroy();\n    infraMarkersRef.current.forEach(marker => marker.destroy());\n    infraMarkersRef.current = [];\n\n    // Главный маркер\n    if (value.address) {\n      fetchCoords(value.address).then(coords => {\n        if (coords) {\n          mainMarkerRef.current = new mapglAPI.Marker(mapInstance, {\n            coordinates: coords,\n            color: '#ff0000',\n            icon: '/home.svg',\n            size: [35, 35]\n          });\n          mapInstance.setCenter(coords);\n        }\n      });\n    }\n\n    // Инфраструктура\n    if (value.map) {\n      Object.entries(value.map).forEach(([key, places]) => {\n        if (!Array.isArray(places)) return;\n        places.forEach(async place => {\n          const address = place === null || place === void 0 ? void 0 : place.address_name;\n          if (!address) return;\n          const coords = await fetchCoords(address);\n          if (!coords) return;\n          const icon = getIconByKey(key, value.infra);\n          const marker = new mapglAPI.Marker(mapInstance, {\n            coordinates: coords,\n            color: '#0000ff',\n            icon: icon,\n            size: [35, 35]\n          });\n          infraMarkersRef.current.push(marker);\n        });\n      });\n    }\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map-container\",\n    style: {\n      width: '100%',\n      height: '600px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(Map2GIS, \"9lfRi+4BGNEY2QPnpsfZMhDCxC0=\");\n_c = Map2GIS;\nconst getIconByKey = (key, infraArray) => {\n  const baseIcons = {\n    'Продукты': '/products.svg',\n    'Школы': '/school.svg',\n    'Детские сады': '/kindergarten.svg',\n    'Медицина': '/hospital.svg',\n    'Аптеки': '/farma.svg',\n    'Спорт': '/sport.svg',\n    'Культура': '/culture.svg',\n    'Бары': '/bar.svg'\n  };\n  if (infraArray !== null && infraArray !== void 0 && infraArray.includes(key)) {\n    return basePath.replace('.svg', '1.svg');\n  }\n  return baseIcons[key] || null;\n};\nvar _c;\n$RefreshReg$(_c, \"Map2GIS\");","map":{"version":3,"names":["React","useEffect","useRef","load","jsxDEV","_jsxDEV","API_KEY","GEOCODE_URL","Map2GIS","value","_s","mapRef","mapglAPIRef","mainMarkerRef","infraMarkersRef","isMounted","then","mapglAPI","current","Map","center","zoom","key","destroy","fetchCoords","address","_data$result","_data$result$items","_data$result$items$","query","url","encodeURIComponent","response","fetch","data","json","point","result","items","lat","lon","err","console","error","mapInstance","forEach","marker","coords","Marker","coordinates","color","icon","size","setCenter","map","Object","entries","places","Array","isArray","place","address_name","getIconByKey","infra","push","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","infraArray","baseIcons","includes","basePath","replace","$RefreshReg$"],"sources":["/Users/relationskatie/study_golang/Hackathon2GIS/frontend/src/Map2GIS.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { load } from '@2gis/mapgl';\n\nconst API_KEY = '2d952543-cd26-4a9b-9aa9-ffa59a0000a3';\nconst GEOCODE_URL = 'https://catalog.api.2gis.com/3.0/items/geocode';\n\nexport const Map2GIS = ({ value }) => {\n  const mapRef = useRef(null);\n  const mapglAPIRef = useRef(null);\n  const mainMarkerRef = useRef(null);\n  const infraMarkersRef = useRef([]);\n\n  // Инициализация карты\n  useEffect(() => {\n    let isMounted = true;\n\n    load().then((mapglAPI) => {\n      if (!isMounted) return;\n\n      mapglAPIRef.current = mapglAPI;\n\n      mapRef.current = new mapglAPI.Map('map-container', {\n        center: [37.618423, 55.751244],\n        zoom: 13,\n        key: API_KEY,\n      });\n    });\n\n    return () => {\n      isMounted = false;\n      mapRef.current && mapRef.current.destroy();\n    };\n  }, []);\n\n  // Получение координат по адресу\n  const fetchCoords = async (address) => {\n    try {\n      const query = `Москва, ${address}`;\n      const url = `${GEOCODE_URL}?q=${encodeURIComponent(query)}&fields=items.point&key=${API_KEY}`;\n\n      const response = await fetch(url);\n      const data = await response.json();\n      const point = data?.result?.items?.[0]?.point;\n\n      if (point?.lat && point?.lon) {\n        return [point.lon, point.lat];\n      }\n    } catch (err) {\n      console.error('Ошибка геокодинга:', err);\n    }\n    return null;\n  };\n\n  useEffect(() => {\n    if (!mapRef.current || !mapglAPIRef.current || !value) return;\n\n    const mapInstance = mapRef.current;\n    const mapglAPI = mapglAPIRef.current;\n\n    // Удаляем предыдущие маркеры\n    if (mainMarkerRef.current) mainMarkerRef.current.destroy();\n    infraMarkersRef.current.forEach(marker => marker.destroy());\n    infraMarkersRef.current = [];\n\n    // Главный маркер\n    if (value.address) {\n      fetchCoords(value.address).then((coords) => {\n        if (coords) {\n          mainMarkerRef.current = new mapglAPI.Marker(mapInstance, {\n            coordinates: coords,\n            color: '#ff0000',\n            icon: '/home.svg',\n            size: [35, 35],\n          });\n          mapInstance.setCenter(coords);\n        }\n      });\n    }\n\n    // Инфраструктура\n    if (value.map) {\n      Object.entries(value.map).forEach(([key, places]) => {\n        if (!Array.isArray(places)) return;\n\n        places.forEach(async (place) => {\n          const address = place?.address_name;\n          if (!address) return;\n\n          const coords = await fetchCoords(address);\n          if (!coords) return;\n\n          const icon = getIconByKey(key, value.infra);\n\n          const marker = new mapglAPI.Marker(mapInstance, {\n            coordinates: coords,\n            color: '#0000ff',\n            icon: icon,\n            size: [35, 35],\n          });\n          infraMarkersRef.current.push(marker);\n        });\n      });\n    }\n  }, [value]);\n\n  return (\n    <div\n      id=\"map-container\"\n      style={{ width: '100%', height: '600px' }}\n    ></div>\n  );\n};\n\nconst getIconByKey = (key, infraArray) => {\n  const baseIcons = {\n    'Продукты': '/products.svg',\n    'Школы': '/school.svg',\n    'Детские сады': '/kindergarten.svg',\n    'Медицина': '/hospital.svg',\n    'Аптеки': '/farma.svg',\n    'Спорт': '/sport.svg',\n    'Культура': '/culture.svg',\n    'Бары': '/bar.svg',\n  };\n\n  if (infraArray?.includes(key)) {\n    return basePath.replace('.svg', '1.svg'); \n  }\n\n  return baseIcons[key] || null;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}