{"ast":null,"code":"var _jsxFileName = \"/Users/relationskatie/study_golang/Hackathon2GIS/frontend/src/Map2GIS.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { load } from '@2gis/mapgl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Map2GIS = ({\n  value\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const markerRef = useRef(null);\n  const mapglAPIRef = useRef(null); // сохраняем API для маркеров\n\n  // Создание карты один раз\n  useEffect(() => {\n    load().then(mapglAPI => {\n      mapglAPIRef.current = mapglAPI; // сохраняем API\n\n      const mapInstance = new mapglAPI.Map('map-container', {\n        center: [37.618423, 55.751244],\n        // центр Москвы [lng, lat]\n        zoom: 13,\n        key: '8f104049-075f-4c47-817b-b8b450854d86'\n      });\n      mapRef.current = mapInstance;\n    });\n    return () => mapRef.current && mapRef.current.destroy();\n  }, []);\n\n  // Обновление маркера при изменении value\n  useEffect(() => {\n    if (!mapRef.current || !mapglAPIRef.current || !value) return;\n\n    // Удаляем старый маркер\n    if (markerRef.current) {\n      markerRef.current.destroy();\n    }\n\n    // Создаем новый маркер через API\n    markerRef.current = new mapglAPIRef.current.Marker(mapRef.current, {\n      coordinates: [value.lon, value.lat] // [lng, lat]\n    });\n\n    // Центрируем карту на новом маркере\n    mapRef.current.setCenter([value.lon, value.lat]);\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map-container\",\n    style: {\n      width: '100%',\n      height: '500px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n_s(Map2GIS, \"vNOuUlPu1Isq5fVq6Q3QtbSMjBY=\");\n_c = Map2GIS;\nvar _c;\n$RefreshReg$(_c, \"Map2GIS\");","map":{"version":3,"names":["React","useEffect","useRef","load","jsxDEV","_jsxDEV","Map2GIS","value","_s","mapRef","markerRef","mapglAPIRef","then","mapglAPI","current","mapInstance","Map","center","zoom","key","destroy","Marker","coordinates","lon","lat","setCenter","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/relationskatie/study_golang/Hackathon2GIS/frontend/src/Map2GIS.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { load } from '@2gis/mapgl';\n\nexport const Map2GIS = ({ value }) => {\n  const mapRef = useRef(null);\n  const markerRef = useRef(null);\n  const mapglAPIRef = useRef(null); // сохраняем API для маркеров\n\n  // Создание карты один раз\n  useEffect(() => {\n    load().then((mapglAPI) => {\n      mapglAPIRef.current = mapglAPI; // сохраняем API\n\n      const mapInstance = new mapglAPI.Map('map-container', {\n        center: [37.618423, 55.751244], // центр Москвы [lng, lat]\n        zoom: 13,\n        key: '8f104049-075f-4c47-817b-b8b450854d86',\n      });\n\n      mapRef.current = mapInstance;\n    });\n\n    return () => mapRef.current && mapRef.current.destroy();\n  }, []);\n\n  // Обновление маркера при изменении value\n  useEffect(() => {\n    if (!mapRef.current || !mapglAPIRef.current || !value) return;\n\n    // Удаляем старый маркер\n    if (markerRef.current) {\n      markerRef.current.destroy();\n    }\n\n    // Создаем новый маркер через API\n    markerRef.current = new mapglAPIRef.current.Marker(mapRef.current, {\n      coordinates: [value.lon, value.lat], // [lng, lat]\n    });\n\n    // Центрируем карту на новом маркере\n    mapRef.current.setCenter([value.lon, value.lat]);\n  }, [value]);\n\n  return <div id=\"map-container\" style={{ width: '100%', height: '500px' }}></div>;\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,IAAI,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,OAAO,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,MAAM,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMQ,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMS,WAAW,GAAGT,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElC;EACAD,SAAS,CAAC,MAAM;IACdE,IAAI,CAAC,CAAC,CAACS,IAAI,CAAEC,QAAQ,IAAK;MACxBF,WAAW,CAACG,OAAO,GAAGD,QAAQ,CAAC,CAAC;;MAEhC,MAAME,WAAW,GAAG,IAAIF,QAAQ,CAACG,GAAG,CAAC,eAAe,EAAE;QACpDC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;QAAE;QAChCC,IAAI,EAAE,EAAE;QACRC,GAAG,EAAE;MACP,CAAC,CAAC;MAEFV,MAAM,CAACK,OAAO,GAAGC,WAAW;IAC9B,CAAC,CAAC;IAEF,OAAO,MAAMN,MAAM,CAACK,OAAO,IAAIL,MAAM,CAACK,OAAO,CAACM,OAAO,CAAC,CAAC;EACzD,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAnB,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,MAAM,CAACK,OAAO,IAAI,CAACH,WAAW,CAACG,OAAO,IAAI,CAACP,KAAK,EAAE;;IAEvD;IACA,IAAIG,SAAS,CAACI,OAAO,EAAE;MACrBJ,SAAS,CAACI,OAAO,CAACM,OAAO,CAAC,CAAC;IAC7B;;IAEA;IACAV,SAAS,CAACI,OAAO,GAAG,IAAIH,WAAW,CAACG,OAAO,CAACO,MAAM,CAACZ,MAAM,CAACK,OAAO,EAAE;MACjEQ,WAAW,EAAE,CAACf,KAAK,CAACgB,GAAG,EAAEhB,KAAK,CAACiB,GAAG,CAAC,CAAE;IACvC,CAAC,CAAC;;IAEF;IACAf,MAAM,CAACK,OAAO,CAACW,SAAS,CAAC,CAAClB,KAAK,CAACgB,GAAG,EAAEhB,KAAK,CAACiB,GAAG,CAAC,CAAC;EAClD,CAAC,EAAE,CAACjB,KAAK,CAAC,CAAC;EAEX,oBAAOF,OAAA;IAAKqB,EAAE,EAAC,eAAe;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAClF,CAAC;AAACzB,EAAA,CAzCWF,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}